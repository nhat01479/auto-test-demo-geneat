<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.5 on win32)" generated="20240105 17:47:46.372" rpa="false" schemaversion="4">
<suite id="s1" name="Code-Types" source="d:\AutomationTest\test\test\testcases\code-types.robot">
<test id="s1-t1" name="CODE_ Verify the cancel action button when delete data" line="367">
<kw name="Setup" library="common" type="SETUP">
<kw name="Set Browser Timeout" library="Browser">
<arg>${BROWSER_TIMEOUT}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20240105 17:47:48.219" endtime="20240105 17:47:48.219"/>
</kw>
<kw name="New Browser" library="Browser">
<arg>${BROWSER}</arg>
<arg>headless=${HEADLESS}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20240105 17:47:48.233" level="INFO">{"browser": "chromium", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "D:\\AutomationTest\\test\\browser\\traces\\c9f49653-d24e-41c3-9b90-a7edb80c3a1c"}</msg>
<msg timestamp="20240105 17:47:48.997" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"tracesDir":"D:\\AutomationTest\\test\\browser\\traces\\c9f49653-d24e-41c3-9b90-a7edb80c3a1c"}</msg>
<status status="PASS" starttime="20240105 17:47:48.233" endtime="20240105 17:47:48.999"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${URL_DEFAULT}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20240105 17:47:51.550" level="INFO">Successfully initialized new page object and opened url: http://dev1.geneat.vn:7802/#/vn</msg>
<msg timestamp="20240105 17:47:51.551" level="INFO">No context was open. New context was automatically opened when this page is created.</msg>
<status status="PASS" starttime="20240105 17:47:49.000" endtime="20240105 17:47:51.551"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${STATE}</var>
<arg>json.loads('''{}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240105 17:47:51.556" level="INFO">${STATE} = {}</msg>
<status status="PASS" starttime="20240105 17:47:51.556" endtime="20240105 17:47:51.556"/>
</kw>
<status status="PASS" starttime="20240105 17:47:48.219" endtime="20240105 17:47:51.556"/>
</kw>
<kw name="Create a test data with &quot;Số răng&quot; type" sourcename="Create a test data with &quot;${type}&quot; type">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${condition}</var>
<arg>Confirm locating exactly in "Danh mục" page</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Confirm locating exactly in &quot;Danh mục&quot; page" library="common" sourcename="Confirm locating exactly in &quot;${name}&quot; page">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 17:47:51.656" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 17:47:51.556" endtime="20240105 17:47:51.656"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:51.657" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 17:47:51.657" endtime="20240105 17:47:51.657"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:51.707" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 17:47:51.657" endtime="20240105 17:47:51.707"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 17:47:51.707" endtime="20240105 17:47:51.707"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.707" endtime="20240105 17:47:51.707"/>
</branch>
<status status="PASS" starttime="20240105 17:47:51.707" endtime="20240105 17:47:51.707"/>
</if>
<status status="PASS" starttime="20240105 17:47:51.556" endtime="20240105 17:47:51.707"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${cnt}</var>
<arg>//header//span[contains(text(),"${name}")]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:51.719" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240105 17:47:51.707" endtime="20240105 17:47:51.720"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${cnt} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20240105 17:47:51.721" level="FAIL">'0 &gt; 0' should be true.</msg>
<status status="FAIL" starttime="20240105 17:47:51.720" endtime="20240105 17:47:51.722"/>
</kw>
<status status="FAIL" starttime="20240105 17:47:51.556" endtime="20240105 17:47:51.722"/>
</kw>
<msg timestamp="20240105 17:47:51.722" level="INFO">${condition} = False</msg>
<status status="PASS" starttime="20240105 17:47:51.556" endtime="20240105 17:47:51.722"/>
</kw>
<if>
<branch type="IF" condition="'${condition}' == 'True'">
<kw name="Select on the &quot;${type}&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.722"/>
</kw>
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<status status="NOT RUN" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.722"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.722"/>
</branch>
<branch type="ELSE">
<if>
<branch type="IF" condition="'${type}' == 'Nhóm thủ thuật'">
<kw name="Go to page create data &quot;Danh mục&quot; with &quot;/MEDICAL_PROCEDURE_GROUP&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.722"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.722"/>
</branch>
<status status="PASS" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.722"/>
</if>
<if>
<branch type="IF" condition="'${type}' == 'Độ khó'">
<kw name="Go to page create data &quot;Danh mục&quot; with &quot;/MEDICAL_PROCEDURE_DIFFICULTY&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.722"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.722"/>
</branch>
<status status="PASS" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.722"/>
</if>
<if>
<branch type="IF" condition="'${type}' == 'Bằng cấp chuyên môn'">
<kw name="Go to page create data &quot;Danh mục&quot; with &quot;/MEDICAL_DEGRE&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<status status="NOT RUN" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.722"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.722"/>
</branch>
<status status="PASS" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.722"/>
</if>
<if>
<branch type="IF" condition="'${type}' == 'Số răng'">
<kw name="Go to page create data &quot;Danh mục&quot; with &quot;/NUMBER_OF_TEETH&quot;" sourcename="Go to page create data &quot;${name}&quot; with &quot;${url}&quot;">
<kw name="Login to admin" library="common">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 17:47:51.822" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.822"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:51.822" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 17:47:51.822" endtime="20240105 17:47:51.822"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:51.837" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 17:47:51.822" endtime="20240105 17:47:51.837"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 17:47:51.837" endtime="20240105 17:47:51.837"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.837" endtime="20240105 17:47:51.837"/>
</branch>
<status status="PASS" starttime="20240105 17:47:51.837" endtime="20240105 17:47:51.847"/>
</if>
<status status="PASS" starttime="20240105 17:47:51.722" endtime="20240105 17:47:51.848"/>
</kw>
<kw name="Enter &quot;email&quot; in &quot;Email&quot; with &quot;admin@gmail.com&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:51.855" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240105 17:47:51.855" endtime="20240105 17:47:51.856"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:51.856" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240105 17:47:51.856" endtime="20240105 17:47:51.856"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:51.857" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 17:47:51.857" endtime="20240105 17:47:51.857"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:51.858" level="INFO">Length is 0</msg>
<msg timestamp="20240105 17:47:51.858" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 17:47:51.858" endtime="20240105 17:47:51.858"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:51.859" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240105 17:47:51.859" endtime="20240105 17:47:51.859"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:51.860" level="INFO">Length is 0</msg>
<msg timestamp="20240105 17:47:51.860" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240105 17:47:51.859" endtime="20240105 17:47:51.860"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.861" endtime="20240105 17:47:51.861"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.861" endtime="20240105 17:47:51.861"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.860" endtime="20240105 17:47:51.861"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.862" endtime="20240105 17:47:51.862"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.862" endtime="20240105 17:47:51.862"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.862" endtime="20240105 17:47:51.863"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.861" endtime="20240105 17:47:51.863"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.863" endtime="20240105 17:47:51.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</branch>
<status status="PASS" starttime="20240105 17:47:51.860" endtime="20240105 17:47:51.866"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:51.866" level="INFO">Length is 15</msg>
<msg timestamp="20240105 17:47:51.866" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240105 17:47:51.866" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<status status="PASS" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</branch>
<status status="PASS" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</if>
<msg timestamp="20240105 17:47:51.866" level="INFO">${text} = admin@gmail.com</msg>
<status status="PASS" starttime="20240105 17:47:51.852" endtime="20240105 17:47:51.866"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240105 17:47:51.866" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Email"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240105 17:47:51.866" endtime="20240105 17:47:51.866"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:51.882" endtime="20240105 17:47:51.941"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240105 17:47:51.941" level="INFO">Fills the text 'admin@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20240105 17:47:51.941" endtime="20240105 17:47:52.019"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:52.035" level="INFO">Length is 15</msg>
<msg timestamp="20240105 17:47:52.035" level="INFO">${cnt} = 15</msg>
<status status="PASS" starttime="20240105 17:47:52.019" endtime="20240105 17:47:52.035"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240105 17:47:52.035" level="INFO">${STATE["Email"]} = admin@gmail.com</msg>
<status status="PASS" starttime="20240105 17:47:52.035" endtime="20240105 17:47:52.035"/>
</kw>
<status status="PASS" starttime="20240105 17:47:52.035" endtime="20240105 17:47:52.035"/>
</branch>
<status status="PASS" starttime="20240105 17:47:52.035" endtime="20240105 17:47:52.035"/>
</if>
<status status="PASS" starttime="20240105 17:47:51.849" endtime="20240105 17:47:52.035"/>
</kw>
<kw name="Enter &quot;password&quot; in &quot;Mật khẩu&quot; with &quot;123123&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:52.035" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240105 17:47:52.035" endtime="20240105 17:47:52.035"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:52.035" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240105 17:47:52.035" endtime="20240105 17:47:52.035"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:52.035" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 17:47:52.035" endtime="20240105 17:47:52.035"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:52.050" level="INFO">Length is 0</msg>
<msg timestamp="20240105 17:47:52.050" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 17:47:52.050" endtime="20240105 17:47:52.050"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:52.057" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240105 17:47:52.057" endtime="20240105 17:47:52.057"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:52.057" level="INFO">Length is 0</msg>
<msg timestamp="20240105 17:47:52.057" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240105 17:47:52.057" endtime="20240105 17:47:52.057"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.057" endtime="20240105 17:47:52.057"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.057" endtime="20240105 17:47:52.057"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.057" endtime="20240105 17:47:52.057"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.057" endtime="20240105 17:47:52.057"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.057" endtime="20240105 17:47:52.057"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.063" endtime="20240105 17:47:52.063"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.057" endtime="20240105 17:47:52.063"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.066" endtime="20240105 17:47:52.066"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.082" endtime="20240105 17:47:52.082"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.082" endtime="20240105 17:47:52.082"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.082" endtime="20240105 17:47:52.082"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.082" endtime="20240105 17:47:52.082"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.082" endtime="20240105 17:47:52.082"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.082" endtime="20240105 17:47:52.082"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.097" endtime="20240105 17:47:52.101"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.082" endtime="20240105 17:47:52.101"/>
</branch>
<status status="PASS" starttime="20240105 17:47:52.057" endtime="20240105 17:47:52.110"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:52.110" level="INFO">Length is 6</msg>
<msg timestamp="20240105 17:47:52.110" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20240105 17:47:52.110" endtime="20240105 17:47:52.110"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240105 17:47:52.134" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20240105 17:47:52.134" endtime="20240105 17:47:52.141"/>
</kw>
<status status="PASS" starttime="20240105 17:47:52.117" endtime="20240105 17:47:52.142"/>
</branch>
<status status="PASS" starttime="20240105 17:47:52.115" endtime="20240105 17:47:52.142"/>
</if>
<msg timestamp="20240105 17:47:52.142" level="INFO">${text} = 123123</msg>
<status status="PASS" starttime="20240105 17:47:52.035" endtime="20240105 17:47:52.142"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240105 17:47:52.142" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mật khẩu"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240105 17:47:52.142" endtime="20240105 17:47:52.142"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:52.142" endtime="20240105 17:47:52.194"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240105 17:47:52.194" level="INFO">Fills the text '123123' in the given field.</msg>
<status status="PASS" starttime="20240105 17:47:52.194" endtime="20240105 17:47:52.241"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:52.241" level="INFO">Length is 6</msg>
<msg timestamp="20240105 17:47:52.241" level="INFO">${cnt} = 6</msg>
<status status="PASS" starttime="20240105 17:47:52.241" endtime="20240105 17:47:52.241"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240105 17:47:52.241" level="INFO">${STATE["Mật khẩu"]} = 123123</msg>
<status status="PASS" starttime="20240105 17:47:52.241" endtime="20240105 17:47:52.241"/>
</kw>
<status status="PASS" starttime="20240105 17:47:52.241" endtime="20240105 17:47:52.241"/>
</branch>
<status status="PASS" starttime="20240105 17:47:52.241" endtime="20240105 17:47:52.241"/>
</if>
<status status="PASS" starttime="20240105 17:47:52.035" endtime="20240105 17:47:52.241"/>
</kw>
<kw name="Click &quot;Đăng nhập&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:52.241" endtime="20240105 17:47:52.404"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:52.404" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240105 17:47:52.404" endtime="20240105 17:47:52.404"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:52.436" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 17:47:52.420" endtime="20240105 17:47:52.436"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.436" endtime="20240105 17:47:52.436"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.436" endtime="20240105 17:47:52.436"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.436" endtime="20240105 17:47:52.436"/>
</branch>
<status status="PASS" starttime="20240105 17:47:52.436" endtime="20240105 17:47:52.436"/>
</if>
<status status="PASS" starttime="20240105 17:47:52.404" endtime="20240105 17:47:52.436"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20240105 17:47:52.452" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 17:47:52.452" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 17:47:52.468" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 17:47:52.468" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 17:47:52.468" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20240105 17:47:52.436" endtime="20240105 17:47:52.468"/>
</kw>
<status status="PASS" starttime="20240105 17:47:52.241" endtime="20240105 17:47:52.468"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:52.468" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240105 17:47:52.468" endtime="20240105 17:47:52.468"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:52.468" level="INFO">Length is 0</msg>
<msg timestamp="20240105 17:47:52.468" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240105 17:47:52.468" endtime="20240105 17:47:52.468"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:52.468" endtime="20240105 17:47:52.468"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:52.468" endtime="20240105 17:47:52.468"/>
</branch>
<status status="PASS" starttime="20240105 17:47:52.468" endtime="20240105 17:47:52.468"/>
</if>
<kw name="Wait Until Element Is Visible" library="common">
<arg>id=swal2-html-container</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240105 17:47:52.590" level="INFO">Waited for Element with selector id=swal2-html-container at state visible</msg>
<status status="PASS" starttime="20240105 17:47:52.483" endtime="20240105 17:47:52.590"/>
</kw>
<status status="PASS" starttime="20240105 17:47:52.483" endtime="20240105 17:47:52.590"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240105 17:47:52.738" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20240105 17:47:52.592" endtime="20240105 17:47:52.738"/>
</kw>
<status status="PASS" starttime="20240105 17:47:52.590" endtime="20240105 17:47:52.739"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:52.741" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20240105 17:47:52.739" endtime="20240105 17:47:52.741"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240105 17:47:53.104" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20240105 17:47:53.104" level="INFO">See also file:///D:/AutomationTest/test/playwright-log.txt for additional details.</msg>
<msg timestamp="20240105 17:47:53.104" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20240105 17:47:52.741" endtime="20240105 17:47:53.204"/>
</kw>
<status status="FAIL" starttime="20240105 17:47:52.741" endtime="20240105 17:47:53.204"/>
</kw>
<msg timestamp="20240105 17:47:53.204" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20240105 17:47:52.741" endtime="20240105 17:47:53.204"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:53.204" endtime="20240105 17:47:53.204"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:53.204" endtime="20240105 17:47:53.204"/>
</branch>
<status status="PASS" starttime="20240105 17:47:53.204" endtime="20240105 17:47:53.204"/>
</if>
<status status="PASS" starttime="20240105 17:47:52.468" endtime="20240105 17:47:53.204"/>
</kw>
<status status="PASS" starttime="20240105 17:47:51.722" endtime="20240105 17:47:53.204"/>
</kw>
<kw name="Click &quot;QUẢN LÝ DANH MỤC&quot; menu" library="common" sourcename="Click &quot;${text}&quot; menu">
<kw name="Click" library="Browser">
<arg>xpath=//li[contains(@class, "menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:53.212" endtime="20240105 17:47:54.283"/>
</kw>
<status status="PASS" starttime="20240105 17:47:53.204" endtime="20240105 17:47:54.283"/>
</kw>
<kw name="Click &quot;Danh mục&quot; sub menu to &quot;/code-types&quot;" library="common" sourcename="Click &quot;${text}&quot; sub menu to &quot;${url}&quot;">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 17:47:54.385" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 17:47:54.284" endtime="20240105 17:47:54.385"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:54.387" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 17:47:54.386" endtime="20240105 17:47:54.387"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:54.406" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 17:47:54.388" endtime="20240105 17:47:54.406"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 17:47:54.406" endtime="20240105 17:47:54.406"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:54.406" endtime="20240105 17:47:54.406"/>
</branch>
<status status="PASS" starttime="20240105 17:47:54.406" endtime="20240105 17:47:54.406"/>
</if>
<status status="PASS" starttime="20240105 17:47:54.284" endtime="20240105 17:47:54.406"/>
</kw>
<kw name="Click" library="Browser">
<arg>xpath=//a[contains(@class, "sub-menu") and descendant::span[contains(text(), "${text}")]]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:54.406" endtime="20240105 17:47:54.592"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${curent_url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20240105 17:47:54.600" level="INFO">${curent_url} = http://dev1.geneat.vn:7802/#/vn/code-types?filter=%7B%22type%22:%22MEDICAL_PROCEDURE_GROUP%22%7D</msg>
<status status="PASS" starttime="20240105 17:47:54.593" endtime="20240105 17:47:54.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${curent_url}</arg>
<arg>${URL_DEFAULT}${url}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20240105 17:47:54.600" endtime="20240105 17:47:54.600"/>
</kw>
<status status="PASS" starttime="20240105 17:47:54.284" endtime="20240105 17:47:54.600"/>
</kw>
<if>
<branch type="IF" condition="'${url}' == '/MEDICAL_PROCEDURE_GROUP'">
<kw name="Select on the &quot;Nhóm thủ thuật&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20240105 17:47:54.604" endtime="20240105 17:47:54.604"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:54.603" endtime="20240105 17:47:54.604"/>
</branch>
<branch type="ELSE IF" condition="'${url}' == '/MEDICAL_PROCEDURE_DIFFICULTY'">
<kw name="Select on the &quot;Độ khó&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20240105 17:47:54.605" endtime="20240105 17:47:54.605"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:54.604" endtime="20240105 17:47:54.605"/>
</branch>
<branch type="ELSE IF" condition="'${url}' == '/MEDICAL_DEGRE'">
<kw name="Select on the &quot;Bằng cấp chuyên môn&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<status status="NOT RUN" starttime="20240105 17:47:54.605" endtime="20240105 17:47:54.605"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:54.605" endtime="20240105 17:47:54.605"/>
</branch>
<branch type="ELSE IF" condition="'${url}' == '/NUMBER_OF_TEETH'">
<kw name="Select on the &quot;Số răng&quot; item line" library="common" sourcename="Select on the &quot;${text}&quot; item line">
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>${text}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:54.607" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 17:47:54.607" endtime="20240105 17:47:54.607"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:54.607" level="INFO">Length is 0</msg>
<msg timestamp="20240105 17:47:54.607" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 17:47:54.607" endtime="20240105 17:47:54.607"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:54.607" endtime="20240105 17:47:54.607"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:54.607" endtime="20240105 17:47:54.607"/>
</branch>
<status status="PASS" starttime="20240105 17:47:54.607" endtime="20240105 17:47:54.607"/>
</if>
<msg timestamp="20240105 17:47:54.607" level="INFO">${text} = Số răng</msg>
<status status="PASS" starttime="20240105 17:47:54.607" endtime="20240105 17:47:54.607"/>
</kw>
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 17:47:54.712" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 17:47:54.607" endtime="20240105 17:47:54.717"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:54.719" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 17:47:54.718" endtime="20240105 17:47:54.719"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:54.850" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 17:47:54.719" endtime="20240105 17:47:54.850"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 17:47:54.851" endtime="20240105 17:47:54.851"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:54.850" endtime="20240105 17:47:54.851"/>
</branch>
<status status="PASS" starttime="20240105 17:47:54.850" endtime="20240105 17:47:54.851"/>
</if>
<status status="PASS" starttime="20240105 17:47:54.607" endtime="20240105 17:47:54.851"/>
</kw>
<kw name="Get Element Item By Name" library="common">
<var>${element}</var>
<arg>${text}</arg>
<msg timestamp="20240105 17:47:54.852" level="INFO">${element} = xpath=//*[contains(@class, "item-text") and contains(text(), "Số răng")]/ancestor::*[contains(@class, "item")]</msg>
<status status="PASS" starttime="20240105 17:47:54.851" endtime="20240105 17:47:54.852"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:54.852" endtime="20240105 17:47:55.289"/>
</kw>
<status status="PASS" starttime="20240105 17:47:54.607" endtime="20240105 17:47:55.294"/>
</kw>
<status status="PASS" starttime="20240105 17:47:54.605" endtime="20240105 17:47:55.294"/>
</branch>
<status status="PASS" starttime="20240105 17:47:54.603" endtime="20240105 17:47:55.295"/>
</if>
<kw name="Click &quot;Thêm mới&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:55.297" endtime="20240105 17:47:55.419"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:55.420" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240105 17:47:55.420" endtime="20240105 17:47:55.420"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:55.425" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 17:47:55.420" endtime="20240105 17:47:55.427"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.431" endtime="20240105 17:47:55.431"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.432" endtime="20240105 17:47:55.432"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.430" endtime="20240105 17:47:55.432"/>
</branch>
<status status="PASS" starttime="20240105 17:47:55.430" endtime="20240105 17:47:55.432"/>
</if>
<status status="PASS" starttime="20240105 17:47:55.419" endtime="20240105 17:47:55.432"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20240105 17:47:55.440" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 17:47:55.440" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 17:47:55.451" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 17:47:55.452" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 17:47:55.456" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20240105 17:47:55.433" endtime="20240105 17:47:55.456"/>
</kw>
<status status="PASS" starttime="20240105 17:47:55.296" endtime="20240105 17:47:55.456"/>
</kw>
<status status="PASS" starttime="20240105 17:47:51.722" endtime="20240105 17:47:55.456"/>
</kw>
<status status="PASS" starttime="20240105 17:47:51.722" endtime="20240105 17:47:55.457"/>
</branch>
<status status="PASS" starttime="20240105 17:47:51.722" endtime="20240105 17:47:55.457"/>
</if>
<status status="PASS" starttime="20240105 17:47:51.722" endtime="20240105 17:47:55.457"/>
</branch>
<status status="PASS" starttime="20240105 17:47:51.722" endtime="20240105 17:47:55.457"/>
</if>
<kw name="Enter &quot;test name&quot; in &quot;Tiêu đề&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:55.458" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240105 17:47:55.458" endtime="20240105 17:47:55.458"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:55.459" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240105 17:47:55.459" endtime="20240105 17:47:55.459"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:55.460" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 17:47:55.459" endtime="20240105 17:47:55.461"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.463" level="INFO">Length is 0</msg>
<msg timestamp="20240105 17:47:55.463" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 17:47:55.461" endtime="20240105 17:47:55.463"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:55.464" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20240105 17:47:55.464" endtime="20240105 17:47:55.464"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.464" level="INFO">Length is 1</msg>
<msg timestamp="20240105 17:47:55.464" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20240105 17:47:55.464" endtime="20240105 17:47:55.464"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.465" endtime="20240105 17:47:55.465"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.465" endtime="20240105 17:47:55.465"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.464" endtime="20240105 17:47:55.465"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20240105 17:47:55.466" level="INFO">${random} = Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:55.466" endtime="20240105 17:47:55.466"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20240105 17:47:55.467" level="INFO">${words} = ['CODE_', 'Verify', 'the', 'cancel', 'action', 'button', 'when', 'delete', 'data']</msg>
<status status="PASS" starttime="20240105 17:47:55.466" endtime="20240105 17:47:55.467"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:55.468" level="INFO">${new_text} = CODE_ Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:55.467" endtime="20240105 17:47:55.468"/>
</kw>
<status status="PASS" starttime="20240105 17:47:55.465" endtime="20240105 17:47:55.468"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.468" endtime="20240105 17:47:55.468"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.469" endtime="20240105 17:47:55.469"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.468" endtime="20240105 17:47:55.469"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.469" endtime="20240105 17:47:55.469"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.470" endtime="20240105 17:47:55.470"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.469" endtime="20240105 17:47:55.470"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.470" endtime="20240105 17:47:55.470"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.470" endtime="20240105 17:47:55.471"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240105 17:47:55.471" endtime="20240105 17:47:55.471"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.471" endtime="20240105 17:47:55.471"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.472" endtime="20240105 17:47:55.472"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.472" endtime="20240105 17:47:55.472"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.471" endtime="20240105 17:47:55.472"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.473" endtime="20240105 17:47:55.473"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.472" endtime="20240105 17:47:55.473"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.474" endtime="20240105 17:47:55.474"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.473" endtime="20240105 17:47:55.474"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.475" endtime="20240105 17:47:55.475"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.474" endtime="20240105 17:47:55.475"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.476" endtime="20240105 17:47:55.478"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.476" endtime="20240105 17:47:55.479"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.479" endtime="20240105 17:47:55.480"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.479" endtime="20240105 17:47:55.480"/>
</branch>
<status status="PASS" starttime="20240105 17:47:55.464" endtime="20240105 17:47:55.480"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.482" level="INFO">Length is 8</msg>
<msg timestamp="20240105 17:47:55.482" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240105 17:47:55.480" endtime="20240105 17:47:55.482"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240105 17:47:55.483" level="INFO">${text} = CODE_ Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:55.482" endtime="20240105 17:47:55.483"/>
</kw>
<status status="PASS" starttime="20240105 17:47:55.482" endtime="20240105 17:47:55.483"/>
</branch>
<status status="PASS" starttime="20240105 17:47:55.482" endtime="20240105 17:47:55.483"/>
</if>
<msg timestamp="20240105 17:47:55.483" level="INFO">${text} = CODE_ Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:55.458" endtime="20240105 17:47:55.483"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240105 17:47:55.484" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Tiêu đề"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240105 17:47:55.483" endtime="20240105 17:47:55.484"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:55.484" endtime="20240105 17:47:55.519"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240105 17:47:55.521" level="INFO">Fills the text 'CODE_ Impedit facere amet.' in the given field.</msg>
<status status="PASS" starttime="20240105 17:47:55.521" endtime="20240105 17:47:55.602"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.604" level="INFO">Length is 26</msg>
<msg timestamp="20240105 17:47:55.605" level="INFO">${cnt} = 26</msg>
<status status="PASS" starttime="20240105 17:47:55.604" endtime="20240105 17:47:55.605"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240105 17:47:55.606" level="INFO">${STATE["Tiêu đề"]} = CODE_ Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:55.606" endtime="20240105 17:47:55.606"/>
</kw>
<status status="PASS" starttime="20240105 17:47:55.605" endtime="20240105 17:47:55.606"/>
</branch>
<status status="PASS" starttime="20240105 17:47:55.605" endtime="20240105 17:47:55.606"/>
</if>
<status status="PASS" starttime="20240105 17:47:55.457" endtime="20240105 17:47:55.606"/>
</kw>
<kw name="Check Text" library="common">
<var>${text}</var>
<arg>_@Tiêu đề@_</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:55.607" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20240105 17:47:55.607" endtime="20240105 17:47:55.607"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.608" level="INFO">Length is 1</msg>
<msg timestamp="20240105 17:47:55.608" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20240105 17:47:55.608" endtime="20240105 17:47:55.608"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:55.609" level="INFO">${text} = CODE_ Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:55.608" endtime="20240105 17:47:55.609"/>
</kw>
<status status="PASS" starttime="20240105 17:47:55.608" endtime="20240105 17:47:55.609"/>
</branch>
<status status="PASS" starttime="20240105 17:47:55.608" endtime="20240105 17:47:55.609"/>
</if>
<msg timestamp="20240105 17:47:55.610" level="INFO">${text} = CODE_ Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:55.607" endtime="20240105 17:47:55.610"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${name}</var>
<arg>${text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:55.618" level="INFO">${name} = CODE_ Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:55.617" endtime="20240105 17:47:55.619"/>
</kw>
<kw name="Enter &quot;number&quot; in &quot;Thứ tự&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:55.621" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240105 17:47:55.621" endtime="20240105 17:47:55.622"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:55.622" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240105 17:47:55.622" endtime="20240105 17:47:55.622"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:55.623" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 17:47:55.623" endtime="20240105 17:47:55.624"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.624" level="INFO">Length is 0</msg>
<msg timestamp="20240105 17:47:55.626" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 17:47:55.624" endtime="20240105 17:47:55.626"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:55.635" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20240105 17:47:55.626" endtime="20240105 17:47:55.636"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.638" level="INFO">Length is 1</msg>
<msg timestamp="20240105 17:47:55.638" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20240105 17:47:55.637" endtime="20240105 17:47:55.639"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.640" endtime="20240105 17:47:55.640"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.640" endtime="20240105 17:47:55.641"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.639" endtime="20240105 17:47:55.641"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.641" endtime="20240105 17:47:55.641"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.641" endtime="20240105 17:47:55.642"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.642" endtime="20240105 17:47:55.642"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.641" endtime="20240105 17:47:55.642"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<msg timestamp="20240105 17:47:55.643" level="INFO">${new_text} = 9769</msg>
<status status="PASS" starttime="20240105 17:47:55.642" endtime="20240105 17:47:55.645"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240105 17:47:55.652" level="INFO">${new_text} = 9769</msg>
<status status="PASS" starttime="20240105 17:47:55.651" endtime="20240105 17:47:55.652"/>
</kw>
<status status="PASS" starttime="20240105 17:47:55.642" endtime="20240105 17:47:55.652"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.652" endtime="20240105 17:47:55.652"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.662" endtime="20240105 17:47:55.662"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.662" endtime="20240105 17:47:55.662"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.662" endtime="20240105 17:47:55.662"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.662" endtime="20240105 17:47:55.667"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.667" endtime="20240105 17:47:55.667"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.667" endtime="20240105 17:47:55.667"/>
</branch>
<status status="PASS" starttime="20240105 17:47:55.639" endtime="20240105 17:47:55.667"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.667" level="INFO">Length is 8</msg>
<msg timestamp="20240105 17:47:55.667" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240105 17:47:55.667" endtime="20240105 17:47:55.667"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240105 17:47:55.667" level="INFO">${text} = 9769</msg>
<status status="PASS" starttime="20240105 17:47:55.667" endtime="20240105 17:47:55.667"/>
</kw>
<status status="PASS" starttime="20240105 17:47:55.667" endtime="20240105 17:47:55.667"/>
</branch>
<status status="PASS" starttime="20240105 17:47:55.667" endtime="20240105 17:47:55.667"/>
</if>
<msg timestamp="20240105 17:47:55.667" level="INFO">${text} = 9769</msg>
<status status="PASS" starttime="20240105 17:47:55.620" endtime="20240105 17:47:55.667"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240105 17:47:55.667" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Thứ tự"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240105 17:47:55.667" endtime="20240105 17:47:55.667"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:55.667" endtime="20240105 17:47:55.707"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240105 17:47:55.707" level="INFO">Fills the text '9769' in the given field.</msg>
<status status="PASS" starttime="20240105 17:47:55.707" endtime="20240105 17:47:55.739"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.739" level="INFO">Length is 4</msg>
<msg timestamp="20240105 17:47:55.739" level="INFO">${cnt} = 4</msg>
<status status="PASS" starttime="20240105 17:47:55.739" endtime="20240105 17:47:55.739"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240105 17:47:55.743" level="INFO">${STATE["Thứ tự"]} = 9769</msg>
<status status="PASS" starttime="20240105 17:47:55.739" endtime="20240105 17:47:55.745"/>
</kw>
<status status="PASS" starttime="20240105 17:47:55.739" endtime="20240105 17:47:55.746"/>
</branch>
<status status="PASS" starttime="20240105 17:47:55.739" endtime="20240105 17:47:55.747"/>
</if>
<status status="PASS" starttime="20240105 17:47:55.619" endtime="20240105 17:47:55.747"/>
</kw>
<kw name="Enter &quot;word&quot; in &quot;Mã&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:55.749" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240105 17:47:55.749" endtime="20240105 17:47:55.749"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:55.750" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240105 17:47:55.750" endtime="20240105 17:47:55.750"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:55.751" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 17:47:55.750" endtime="20240105 17:47:55.751"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.751" level="INFO">Length is 0</msg>
<msg timestamp="20240105 17:47:55.751" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 17:47:55.751" endtime="20240105 17:47:55.751"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:55.752" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20240105 17:47:55.752" endtime="20240105 17:47:55.752"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.753" level="INFO">Length is 1</msg>
<msg timestamp="20240105 17:47:55.753" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20240105 17:47:55.752" endtime="20240105 17:47:55.753"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.754" endtime="20240105 17:47:55.754"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.754" endtime="20240105 17:47:55.754"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.753" endtime="20240105 17:47:55.755"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.755" endtime="20240105 17:47:55.755"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.755" endtime="20240105 17:47:55.755"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.756" endtime="20240105 17:47:55.756"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.755" endtime="20240105 17:47:55.756"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.757" endtime="20240105 17:47:55.757"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.757" endtime="20240105 17:47:55.757"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.756" endtime="20240105 17:47:55.757"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.758" endtime="20240105 17:47:55.758"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.758" endtime="20240105 17:47:55.759"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.758" endtime="20240105 17:47:55.760"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.761" endtime="20240105 17:47:55.762"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.760" endtime="20240105 17:47:55.762"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.762" endtime="20240105 17:47:55.763"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<msg timestamp="20240105 17:47:55.763" level="INFO">${new_text} = Impedit.</msg>
<status status="PASS" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</kw>
<status status="PASS" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</branch>
<status status="PASS" starttime="20240105 17:47:55.753" endtime="20240105 17:47:55.763"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.763" level="INFO">Length is 8</msg>
<msg timestamp="20240105 17:47:55.763" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240105 17:47:55.763" level="INFO">${text} = Impedit.</msg>
<status status="PASS" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</kw>
<status status="PASS" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</branch>
<status status="PASS" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</if>
<msg timestamp="20240105 17:47:55.763" level="INFO">${text} = Impedit.</msg>
<status status="PASS" starttime="20240105 17:47:55.748" endtime="20240105 17:47:55.763"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//input[contains(@class, "ant-input")]</arg>
<msg timestamp="20240105 17:47:55.763" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mã"]/../../*[contains(@class, "ant-form-item")]//input[contains(@class, "ant-input")]</msg>
<status status="PASS" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.763"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:55.763" endtime="20240105 17:47:55.820"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<arg>True</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240105 17:47:55.820" level="INFO">Fills the text 'Impedit.' in the given field.</msg>
<status status="PASS" starttime="20240105 17:47:55.820" endtime="20240105 17:47:55.880"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.880" level="INFO">Length is 8</msg>
<msg timestamp="20240105 17:47:55.880" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.880"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240105 17:47:55.880" level="INFO">${STATE["Mã"]} = Impedit.</msg>
<status status="PASS" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.880"/>
</kw>
<status status="PASS" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.880"/>
</branch>
<status status="PASS" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.880"/>
</if>
<status status="PASS" starttime="20240105 17:47:55.747" endtime="20240105 17:47:55.880"/>
</kw>
<kw name="Enter &quot;paragraph&quot; in textarea &quot;Mô tả&quot; with &quot;_RANDOM_&quot;" library="common" sourcename="Enter &quot;${type}&quot; in textarea &quot;${name}&quot; with &quot;${text}&quot;">
<kw name="Get Random Text" library="common">
<var>${text}</var>
<arg>${type}</arg>
<arg>${text}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_RANDOM_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:55.880" level="INFO">${symbol} = _RANDOM_</msg>
<status status="PASS" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.880"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:55.880" level="INFO">${new_text} = </msg>
<status status="PASS" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.880"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:55.880" level="INFO">${containsS} = []</msg>
<status status="PASS" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.880"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.880" level="INFO">Length is 0</msg>
<msg timestamp="20240105 17:47:55.880" level="INFO">${cntS} = 0</msg>
<status status="PASS" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.880"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:55.880" level="INFO">${contains} = ['_RANDOM_']</msg>
<status status="PASS" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.880"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.880" level="INFO">Length is 1</msg>
<msg timestamp="20240105 17:47:55.880" level="INFO">${cnt} = 1</msg>
<status status="PASS" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.880"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.880"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${symbol}</var>
<arg>_@${containsS[0]}@_</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.893" endtime="20240105 17:47:55.894"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.894"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'test name'">
<kw name="Sentence" library="FakerLibrary">
<var>${random}</var>
<arg>nb_words=3</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</kw>
<kw name="Split String" library="String">
<var>${words}</var>
<arg>${TEST NAME}</arg>
<arg>${SPACE}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${new_text}</var>
<arg>${words[0]} ${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.897" endtime="20240105 17:47:55.899"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'number'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'percentage'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'paragraph'">
<kw name="Paragraph" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a paragraph.</doc>
<msg timestamp="20240105 17:47:55.899" level="INFO">${new_text} = Voluptatibus cum neque. Nostrum nam consequuntur deleniti sequi.</msg>
<status status="PASS" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</kw>
<status status="PASS" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'email'">
<kw name="Email" library="FakerLibrary">
<var>${new_text}</var>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'phone'">
<kw name="Random Int" library="FakerLibrary">
<var>${new_text}</var>
<arg>min=2000000000</arg>
<arg>max=9999999999</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${new_text}</var>
<arg>${new_text}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.899"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'color'">
<kw name="Safe Hex Color" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a web-safe color formatted as a hex triplet.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.908" endtime="20240105 17:47:55.908"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.899" endtime="20240105 17:47:55.908"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and &quot;${type}&quot; == 'password'">
<kw name="Password" library="FakerLibrary">
<var>${new_text}</var>
<arg>10</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<arg>True</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.908" endtime="20240105 17:47:55.908"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.908" endtime="20240105 17:47:55.908"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'date'">
<kw name="Date" library="FakerLibrary">
<var>${new_text}</var>
<arg>pattern=%d-%m-%Y</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.908" endtime="20240105 17:47:55.908"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.908" endtime="20240105 17:47:55.908"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0 and '${type}' == 'word'">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<arg>nb_words=1</arg>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.909" endtime="20240105 17:47:55.910"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.908" endtime="20240105 17:47:55.910"/>
</branch>
<branch type="ELSE IF" condition="${cnt} &gt; 0">
<kw name="Sentence" library="FakerLibrary">
<var>${new_text}</var>
<doc>Generate a sentence.</doc>
<status status="NOT RUN" starttime="20240105 17:47:55.913" endtime="20240105 17:47:55.913"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:55.912" endtime="20240105 17:47:55.914"/>
</branch>
<status status="PASS" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.914"/>
</if>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:55.914" level="INFO">Length is 8</msg>
<msg timestamp="20240105 17:47:55.914" level="INFO">${cnt} = 8</msg>
<status status="PASS" starttime="20240105 17:47:55.914" endtime="20240105 17:47:55.914"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${text}</var>
<arg>${text}</arg>
<arg>${symbol}</arg>
<arg>${new_text}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20240105 17:47:55.914" level="INFO">${text} = Voluptatibus cum neque. Nostrum nam consequuntur deleniti sequi.</msg>
<status status="PASS" starttime="20240105 17:47:55.914" endtime="20240105 17:47:55.914"/>
</kw>
<status status="PASS" starttime="20240105 17:47:55.914" endtime="20240105 17:47:55.914"/>
</branch>
<status status="PASS" starttime="20240105 17:47:55.914" endtime="20240105 17:47:55.914"/>
</if>
<msg timestamp="20240105 17:47:55.914" level="INFO">${text} = Voluptatibus cum neque. Nostrum nam consequuntur deleniti sequi.</msg>
<status status="PASS" starttime="20240105 17:47:55.880" endtime="20240105 17:47:55.914"/>
</kw>
<kw name="Get Element Form Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//textarea</arg>
<msg timestamp="20240105 17:47:55.914" level="INFO">${element} = xpath=//*[contains(@class, "ant-form-item-label")]/label[text()="Mô tả"]/../../*[contains(@class, "ant-form-item")]//textarea</msg>
<status status="PASS" starttime="20240105 17:47:55.914" endtime="20240105 17:47:55.914"/>
</kw>
<kw name="Clear Text" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears the text field found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:55.914" endtime="20240105 17:47:55.963"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${element}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20240105 17:47:55.968" level="INFO">Fills the text 'Voluptatibus cum neque. Nostrum nam consequuntur deleniti sequi.' in the given field.</msg>
<status status="PASS" starttime="20240105 17:47:55.967" endtime="20240105 17:47:56.009"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${text}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:56.017" level="INFO">Length is 64</msg>
<msg timestamp="20240105 17:47:56.017" level="INFO">${cnt} = 64</msg>
<status status="PASS" starttime="20240105 17:47:56.013" endtime="20240105 17:47:56.017"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Set Global Variable" library="BuiltIn">
<arg>\${STATE["${name}"]}</arg>
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240105 17:47:56.017" level="INFO">${STATE["Mô tả"]} = Voluptatibus cum neque. Nostrum nam consequuntur deleniti sequi.</msg>
<status status="PASS" starttime="20240105 17:47:56.017" endtime="20240105 17:47:56.017"/>
</kw>
<status status="PASS" starttime="20240105 17:47:56.017" endtime="20240105 17:47:56.017"/>
</branch>
<status status="PASS" starttime="20240105 17:47:56.017" endtime="20240105 17:47:56.017"/>
</if>
<status status="PASS" starttime="20240105 17:47:55.880" endtime="20240105 17:47:56.017"/>
</kw>
<kw name="Click &quot;Lưu lại&quot; button" library="common" sourcename="Click &quot;${text}&quot; button">
<kw name="Click" library="Browser">
<arg>xpath=//button[@title="${text}"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:56.017" endtime="20240105 17:47:56.122"/>
</kw>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:56.134" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240105 17:47:56.127" endtime="20240105 17:47:56.134"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:56.154" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 17:47:56.134" endtime="20240105 17:47:56.154"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:56.154" endtime="20240105 17:47:56.154"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240105 17:47:56.154" endtime="20240105 17:47:56.154"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:56.154" endtime="20240105 17:47:56.154"/>
</branch>
<status status="PASS" starttime="20240105 17:47:56.154" endtime="20240105 17:47:56.154"/>
</if>
<status status="PASS" starttime="20240105 17:47:56.123" endtime="20240105 17:47:56.154"/>
</kw>
<kw name="Scroll By" library="Browser">
<arg>${None}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Scrolls an element or the page relative from current position by the given values.</doc>
<msg timestamp="20240105 17:47:56.314" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 17:47:56.314" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 17:47:56.406" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 17:47:56.406" level="INFO">JavaScript executed successfully.</msg>
<msg timestamp="20240105 17:47:56.420" level="INFO">JavaScript executed successfully.</msg>
<status status="PASS" starttime="20240105 17:47:56.154" endtime="20240105 17:47:56.420"/>
</kw>
<status status="PASS" starttime="20240105 17:47:56.017" endtime="20240105 17:47:56.420"/>
</kw>
<kw name="User look message &quot;Success&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:56.420" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240105 17:47:56.420" endtime="20240105 17:47:56.420"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:56.420" level="INFO">Length is 0</msg>
<msg timestamp="20240105 17:47:56.420" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240105 17:47:56.420" endtime="20240105 17:47:56.420"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:56.420" endtime="20240105 17:47:56.420"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:56.420" endtime="20240105 17:47:56.420"/>
</branch>
<status status="PASS" starttime="20240105 17:47:56.420" endtime="20240105 17:47:56.420"/>
</if>
<kw name="Wait Until Element Is Visible" library="common">
<arg>id=swal2-html-container</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240105 17:47:56.482" level="INFO">Waited for Element with selector id=swal2-html-container at state visible</msg>
<status status="PASS" starttime="20240105 17:47:56.427" endtime="20240105 17:47:56.484"/>
</kw>
<status status="PASS" starttime="20240105 17:47:56.426" endtime="20240105 17:47:56.484"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240105 17:47:56.591" level="INFO">Text: 'Success'</msg>
<status status="PASS" starttime="20240105 17:47:56.485" endtime="20240105 17:47:56.591"/>
</kw>
<status status="PASS" starttime="20240105 17:47:56.485" endtime="20240105 17:47:56.591"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:56.591" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20240105 17:47:56.591" endtime="20240105 17:47:56.591"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240105 17:47:57.105" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20240105 17:47:57.110" level="INFO">See also file:///D:/AutomationTest/test/playwright-log.txt for additional details.</msg>
<msg timestamp="20240105 17:47:57.112" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20240105 17:47:56.591" endtime="20240105 17:47:57.114"/>
</kw>
<status status="FAIL" starttime="20240105 17:47:56.591" endtime="20240105 17:47:57.115"/>
</kw>
<msg timestamp="20240105 17:47:57.115" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20240105 17:47:56.591" endtime="20240105 17:47:57.115"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:57.116" endtime="20240105 17:47:57.116"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:57.116" endtime="20240105 17:47:57.117"/>
</branch>
<status status="PASS" starttime="20240105 17:47:57.116" endtime="20240105 17:47:57.117"/>
</if>
<status status="PASS" starttime="20240105 17:47:56.420" endtime="20240105 17:47:57.117"/>
</kw>
<return>
<value>${name}</value>
<status status="PASS" starttime="20240105 17:47:57.117" endtime="20240105 17:47:57.117"/>
</return>
<status status="PASS" starttime="20240105 17:47:51.556" endtime="20240105 17:47:57.118"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line with cancel" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line with cancel">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 17:47:57.221" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 17:47:57.119" endtime="20240105 17:47:57.221"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:57.223" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 17:47:57.222" endtime="20240105 17:47:57.223"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:57.228" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 17:47:57.223" endtime="20240105 17:47:57.228"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 17:47:57.244" endtime="20240105 17:47:57.244"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:57.244" endtime="20240105 17:47:57.244"/>
</branch>
<status status="PASS" starttime="20240105 17:47:57.243" endtime="20240105 17:47:57.244"/>
</if>
<status status="PASS" starttime="20240105 17:47:57.119" endtime="20240105 17:47:57.244"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:57.244" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20240105 17:47:57.244" endtime="20240105 17:47:57.244"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:57.244" level="INFO">Length is 1</msg>
<msg timestamp="20240105 17:47:57.244" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20240105 17:47:57.244" endtime="20240105 17:47:57.244"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:57.259" level="INFO">${text} = CODE_ Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:57.244" endtime="20240105 17:47:57.262"/>
</kw>
<status status="PASS" starttime="20240105 17:47:57.244" endtime="20240105 17:47:57.262"/>
</branch>
<status status="PASS" starttime="20240105 17:47:57.244" endtime="20240105 17:47:57.262"/>
</if>
<msg timestamp="20240105 17:47:57.262" level="INFO">${name} = CODE_ Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:57.244" endtime="20240105 17:47:57.262"/>
</kw>
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20240105 17:47:57.262" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(), "CODE_ Impedit facere amet.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20240105 17:47:57.262" endtime="20240105 17:47:57.262"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:57.262" endtime="20240105 17:47:58.361"/>
</kw>
<kw name="Click Cancel Action" library="common">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 17:47:58.462" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 17:47:58.361" endtime="20240105 17:47:58.463"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:58.463" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 17:47:58.463" endtime="20240105 17:47:58.463"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:58.479" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 17:47:58.463" endtime="20240105 17:47:58.479"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 17:47:58.479" endtime="20240105 17:47:58.479"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:58.479" endtime="20240105 17:47:58.479"/>
</branch>
<status status="PASS" starttime="20240105 17:47:58.479" endtime="20240105 17:47:58.479"/>
</if>
<status status="PASS" starttime="20240105 17:47:58.361" endtime="20240105 17:47:58.479"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//button[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:58.479" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//button[1]</msg>
<status status="PASS" starttime="20240105 17:47:58.479" endtime="20240105 17:47:58.479"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:58.494" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20240105 17:47:58.479" endtime="20240105 17:47:58.494"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:58.494" endtime="20240105 17:47:58.641"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 17:47:58.741" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 17:47:58.641" endtime="20240105 17:47:58.741"/>
</kw>
<status status="PASS" starttime="20240105 17:47:58.494" endtime="20240105 17:47:58.741"/>
</branch>
<status status="PASS" starttime="20240105 17:47:58.494" endtime="20240105 17:47:58.741"/>
</if>
<status status="PASS" starttime="20240105 17:47:58.361" endtime="20240105 17:47:58.741"/>
</kw>
<status status="PASS" starttime="20240105 17:47:57.118" endtime="20240105 17:47:58.741"/>
</kw>
<kw name="Then &quot;_@Tiêu đề@_&quot; should be visible in table line" library="common" sourcename="&quot;${name}&quot; should be visible in table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 17:47:58.850" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 17:47:58.749" endtime="20240105 17:47:58.850"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:58.850" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 17:47:58.850" endtime="20240105 17:47:58.850"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:58.866" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 17:47:58.853" endtime="20240105 17:47:58.867"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 17:47:58.868" endtime="20240105 17:47:58.868"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:58.867" endtime="20240105 17:47:58.868"/>
</branch>
<status status="PASS" starttime="20240105 17:47:58.867" endtime="20240105 17:47:58.869"/>
</if>
<status status="PASS" starttime="20240105 17:47:58.749" endtime="20240105 17:47:58.869"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:58.869" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20240105 17:47:58.869" endtime="20240105 17:47:58.869"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:58.869" level="INFO">Length is 1</msg>
<msg timestamp="20240105 17:47:58.869" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20240105 17:47:58.869" endtime="20240105 17:47:58.869"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:58.869" level="INFO">${text} = CODE_ Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:58.869" endtime="20240105 17:47:58.869"/>
</kw>
<status status="PASS" starttime="20240105 17:47:58.869" endtime="20240105 17:47:58.869"/>
</branch>
<status status="PASS" starttime="20240105 17:47:58.869" endtime="20240105 17:47:58.869"/>
</if>
<msg timestamp="20240105 17:47:58.869" level="INFO">${name} = CODE_ Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:58.869" endtime="20240105 17:47:58.869"/>
</kw>
<kw name="Get Property" library="Browser">
<arg>//tbody/tr[2]/td[2]/button[1]</arg>
<arg>innerText</arg>
<arg>equal</arg>
<arg>${name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20240105 17:47:58.901" level="INFO">Property: 'CODE_ Impedit facere amet.'</msg>
<status status="PASS" starttime="20240105 17:47:58.869" endtime="20240105 17:47:58.902"/>
</kw>
<status status="PASS" starttime="20240105 17:47:58.741" endtime="20240105 17:47:58.902"/>
</kw>
<kw name="When Click on the &quot;Xóa&quot; button in the &quot;_@Tiêu đề@_&quot; table line" library="common" sourcename="Click on the &quot;${text}&quot; button in the &quot;${name}&quot; table line">
<kw name="Wait Until Element Spin" library="common">
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 17:47:59.005" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 17:47:58.904" endtime="20240105 17:47:59.005"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-spin-spinning")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:59.005" level="INFO">${element} = xpath=//*[contains(@class, "ant-spin-spinning")]</msg>
<status status="PASS" starttime="20240105 17:47:59.005" endtime="20240105 17:47:59.012"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:59.028" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20240105 17:47:59.013" endtime="20240105 17:47:59.029"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Wait Until Page Does Not Contain Element" library="common">
<arg>${element}</arg>
<status status="NOT RUN" starttime="20240105 17:47:59.029" endtime="20240105 17:47:59.029"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:59.029" endtime="20240105 17:47:59.029"/>
</branch>
<status status="PASS" starttime="20240105 17:47:59.029" endtime="20240105 17:47:59.029"/>
</if>
<status status="PASS" starttime="20240105 17:47:58.903" endtime="20240105 17:47:59.029"/>
</kw>
<kw name="Check Text" library="common">
<var>${name}</var>
<arg>${name}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${containsS}</var>
<arg>${text}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:59.029" level="INFO">${containsS} = ['Tiêu đề']</msg>
<status status="PASS" starttime="20240105 17:47:59.029" endtime="20240105 17:47:59.029"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cntS}</var>
<arg>${containsS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:59.029" level="INFO">Length is 1</msg>
<msg timestamp="20240105 17:47:59.029" level="INFO">${cntS} = 1</msg>
<status status="PASS" starttime="20240105 17:47:59.029" endtime="20240105 17:47:59.029"/>
</kw>
<if>
<branch type="IF" condition="${cntS} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${text}</var>
<arg>${STATE["${containsS[0]}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:59.043" level="INFO">${text} = CODE_ Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:59.029" endtime="20240105 17:47:59.043"/>
</kw>
<status status="PASS" starttime="20240105 17:47:59.029" endtime="20240105 17:47:59.043"/>
</branch>
<status status="PASS" starttime="20240105 17:47:59.029" endtime="20240105 17:47:59.043"/>
</if>
<msg timestamp="20240105 17:47:59.043" level="INFO">${name} = CODE_ Impedit facere amet.</msg>
<status status="PASS" starttime="20240105 17:47:59.029" endtime="20240105 17:47:59.043"/>
</kw>
<if>
<branch type="IF" condition="'${text}' == 'Chi tiết'">
<kw name="Get Element Table Item By Name" library="common">
<var>${element1}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<status status="NOT RUN" starttime="20240105 17:47:59.043" endtime="20240105 17:47:59.043"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element1}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:59.043" endtime="20240105 17:47:59.043"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element1}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:59.043" endtime="20240105 17:47:59.043"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:59.043" endtime="20240105 17:47:59.043"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${elementS}</var>
<arg>${name}</arg>
<arg>//p[contains(text(),"${name}")]</arg>
<status status="NOT RUN" starttime="20240105 17:47:59.043" endtime="20240105 17:47:59.043"/>
</kw>
<kw name="Click" library="Browser">
<arg>${elementS}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:59.043" endtime="20240105 17:47:59.043"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:59.043" endtime="20240105 17:47:59.043"/>
</branch>
<status status="NOT RUN" starttime="20240105 17:47:59.043" endtime="20240105 17:47:59.043"/>
</if>
<status status="NOT RUN" starttime="20240105 17:47:59.043" endtime="20240105 17:47:59.043"/>
</branch>
<branch type="ELSE">
<kw name="Get Element Table Item By Name" library="common">
<var>${element}</var>
<arg>${name}</arg>
<arg>//button[@title = "${text}"]</arg>
<msg timestamp="20240105 17:47:59.043" level="INFO">${element} = xpath=//*[contains(@class, "ant-table-row")]//*[contains(text(), "CODE_ Impedit facere amet.")]/ancestor::tr//button[@title = "Xóa"]</msg>
<status status="PASS" starttime="20240105 17:47:59.043" endtime="20240105 17:47:59.043"/>
</kw>
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:59.043" endtime="20240105 17:47:59.131"/>
</kw>
<status status="PASS" starttime="20240105 17:47:59.043" endtime="20240105 17:47:59.131"/>
</branch>
<status status="PASS" starttime="20240105 17:47:59.043" endtime="20240105 17:47:59.131"/>
</if>
<kw name="Click Confirm To Action" library="common">
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:59.131" level="INFO">${element} = xpath=//*[contains(@class, "ant-popover")]//*[contains(@class, "ant-btn-primary")]</msg>
<status status="PASS" starttime="20240105 17:47:59.131" endtime="20240105 17:47:59.131"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${count}</var>
<arg>${element}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20240105 17:47:59.148" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20240105 17:47:59.131" endtime="20240105 17:47:59.148"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20240105 17:47:59.148" endtime="20240105 17:47:59.426"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${SHOULD_TIMEOUT}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240105 17:47:59.527" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20240105 17:47:59.426" endtime="20240105 17:47:59.530"/>
</kw>
<status status="PASS" starttime="20240105 17:47:59.148" endtime="20240105 17:47:59.530"/>
</branch>
<status status="PASS" starttime="20240105 17:47:59.148" endtime="20240105 17:47:59.530"/>
</if>
<status status="PASS" starttime="20240105 17:47:59.131" endtime="20240105 17:47:59.530"/>
</kw>
<status status="PASS" starttime="20240105 17:47:58.903" endtime="20240105 17:47:59.531"/>
</kw>
<kw name="Then User look message &quot;Đã xóa thành công&quot; popup" library="common" sourcename="User look message &quot;${message}&quot; popup">
<kw name="Get Regexp Matches" library="String">
<var>${contains}</var>
<arg>${message}</arg>
<arg>_@(.+)@_</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20240105 17:47:59.533" level="INFO">${contains} = []</msg>
<status status="PASS" starttime="20240105 17:47:59.533" endtime="20240105 17:47:59.533"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${cnt}</var>
<arg>${contains}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240105 17:47:59.534" level="INFO">Length is 0</msg>
<msg timestamp="20240105 17:47:59.534" level="INFO">${cnt} = 0</msg>
<status status="PASS" starttime="20240105 17:47:59.534" endtime="20240105 17:47:59.534"/>
</kw>
<if>
<branch type="IF" condition="${cnt} &gt; 0">
<kw name="Replace String" library="String">
<var>${message}</var>
<arg>${message}</arg>
<arg>_@${contains[0]}@_</arg>
<arg>${STATE["${contains[0]}"]}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:59.535" endtime="20240105 17:47:59.536"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:59.535" endtime="20240105 17:47:59.536"/>
</branch>
<status status="PASS" starttime="20240105 17:47:59.535" endtime="20240105 17:47:59.536"/>
</if>
<kw name="Wait Until Element Is Visible" library="common">
<arg>id=swal2-html-container</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240105 17:47:59.599" level="INFO">Waited for Element with selector id=swal2-html-container at state visible</msg>
<status status="PASS" starttime="20240105 17:47:59.541" endtime="20240105 17:47:59.599"/>
</kw>
<status status="PASS" starttime="20240105 17:47:59.536" endtime="20240105 17:47:59.599"/>
</kw>
<kw name="Element Text Should Be" library="common">
<arg>id=swal2-html-container</arg>
<arg>${message}</arg>
<kw name="Get Text" library="Browser">
<arg>${locator}</arg>
<arg>equal</arg>
<arg>${expected}</arg>
<arg>${message}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20240105 17:47:59.660" level="INFO">Text: 'Đã xóa thành công'</msg>
<status status="PASS" starttime="20240105 17:47:59.599" endtime="20240105 17:47:59.660"/>
</kw>
<status status="PASS" starttime="20240105 17:47:59.599" endtime="20240105 17:47:59.660"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>xpath=//*[contains(@class, "swal2-confirm")]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240105 17:47:59.660" level="INFO">${element} = xpath=//*[contains(@class, "swal2-confirm")]</msg>
<status status="PASS" starttime="20240105 17:47:59.660" endtime="20240105 17:47:59.660"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${passed}</var>
<arg>Element Should Be Visible</arg>
<arg>${element}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="common">
<arg>${element}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${locator}</arg>
<arg>visible</arg>
<arg>${timeout}</arg>
<arg>${message}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20240105 17:47:59.961" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20240105 17:47:59.961" level="INFO">See also file:///D:/AutomationTest/test/playwright-log.txt for additional details.</msg>
<msg timestamp="20240105 17:47:59.961" level="FAIL">TimeoutError: locator.waitFor: Timeout 100ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(@class, "swal2-confirm")]') to be visible
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
  locator resolved to hidden &lt;button type="button" aria-label="" class="swal2-confirm…&gt;OK&lt;/button&gt;
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20240105 17:47:59.660" endtime="20240105 17:47:59.961"/>
</kw>
<status status="FAIL" starttime="20240105 17:47:59.660" endtime="20240105 17:47:59.961"/>
</kw>
<msg timestamp="20240105 17:47:59.974" level="INFO">${passed} = False</msg>
<status status="PASS" starttime="20240105 17:47:59.660" endtime="20240105 17:47:59.978"/>
</kw>
<if>
<branch type="IF" condition="'${passed}' == 'True'">
<kw name="Click" library="Browser">
<arg>${element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20240105 17:47:59.982" endtime="20240105 17:47:59.982"/>
</kw>
<status status="NOT RUN" starttime="20240105 17:47:59.981" endtime="20240105 17:47:59.983"/>
</branch>
<status status="PASS" starttime="20240105 17:47:59.980" endtime="20240105 17:47:59.983"/>
</if>
<status status="PASS" starttime="20240105 17:47:59.532" endtime="20240105 17:47:59.983"/>
</kw>
<kw name="Tear Down" library="common" type="TEARDOWN">
<kw name="Close Browser" library="Browser">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20240105 17:48:00.469" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20240105 17:47:59.984" endtime="20240105 17:48:00.475"/>
</kw>
<status status="PASS" starttime="20240105 17:47:59.984" endtime="20240105 17:48:00.476"/>
</kw>
<status status="PASS" starttime="20240105 17:47:48.219" endtime="20240105 17:48:00.477"/>
</test>
<status status="PASS" starttime="20240105 17:47:46.385" endtime="20240105 17:48:00.487"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Code-Types">Code-Types</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
